package ${package}.domain.${moduleName};

import org.apache.commons.lang3.builder.ToStringBuilder;
import org.apache.commons.lang3.builder.ToStringStyle;
import com.casic.common.base.BaseEntity;
import java.math.BigDecimal;

#foreach ($column in $columns)
#if($column.attrType == 'Date')
import java.util.Date;
#break
#end
#end

/**
 * ${tableComment}表 ${tableName}
 * 
 * @author ${author}
 * @date ${datetime}
 */
public class ${className} extends BaseEntity
{
	private static final long serialVersionUID = 1L;
	
	/** $primaryKey.columnComment */
	private $primaryKey.attrType $primaryKey.attrname;

#foreach ($column in $columns)
	#if($column.dataType == 'List')
	
	/** $column.columnComment */
    private $column.dataType<$column.attrType> $column.attrname;
    #else
    
    /** $column.columnComment */
    private $column.attrType $column.attrname;
    #end
#end

    /** ${childTable.tableComment}实例*/
    private ${childTable.className} ${childTable.classname};

    public void set${primaryKey.attrName}($primaryKey.attrType $primaryKey.attrname) 
    {
        this.$primaryKey.attrname = $primaryKey.attrname;
    }

    public $primaryKey.attrType get${primaryKey.attrName}() 
    {
        return $primaryKey.attrname;
    }

#foreach ($column in $columns)
    #if($column.dataType == 'List')
    
    public void set${column.attrName}($column.dataType<$column.attrType> $column.attrname) 
    {
        this.$column.attrname = $column.attrname;
    }

    public $column.dataType<$column.attrType> get${column.attrName}() 
    {
        return $column.attrname;
    }
    #else
    
    public void set${column.attrName}($column.attrType $column.attrname) 
    {
        this.$column.attrname = $column.attrname;
    }

    public $column.attrType get${column.attrName}() 
    {
        return $column.attrname;
    }
    #end
#end

    public void set${childTable.className}(${childTable.className} ${childTable.classname}) 
    {
        this.${childTable.classname} = ${childTable.classname};
    }

    public ${childTable.className} get${childTable.className}() 
    {
        return ${childTable.classname};
    }

    public String toString() {
        return new ToStringBuilder(this,ToStringStyle.MULTI_LINE_STYLE).append("${primaryKey.attrname}", get${primaryKey.attrName}())
#foreach ($column in $columns)
            .append("${column.attrname}", get${column.attrName}())
#end
            .toString();
    }
}
